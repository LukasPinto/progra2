/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.RegistroEstacionamiento;
import static Controlador.RegistroEstacionamiento.getCalendar;
import Modelo.Camion;
import Modelo.Moto;
import Modelo.Vehiculo;
import java.awt.Color;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Benjamin
 */
public class Lista extends javax.swing.JFrame {

    /**
     * Creates new form Lista
     */
    public Lista() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTituloLista = new javax.swing.JLabel();
        txtBuscarPatente = new javax.swing.JTextField();
        lblBuscarPantente = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnVolver = new javax.swing.JButton();
        btnFiltrarPatente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnListarTodos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblTituloLista.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        lblTituloLista.setForeground(new java.awt.Color(0, 0, 0));
        lblTituloLista.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloLista.setText("Lista Vehiculos");

        txtBuscarPatente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarPatenteKeyTyped(evt);
            }
        });

        lblBuscarPantente.setForeground(new java.awt.Color(0, 0, 0));
        lblBuscarPantente.setText("Buscar Pantente:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patente", "Marca", "Modelo", "Tiempo Estacionado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnFiltrarPatente.setText("Filtrar Patente");
        btnFiltrarPatente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarPatenteActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("?");
        jLabel2.setToolTipText("<html>\n<p>Ejemplo de patente:</p>\n<p>BBBB10</p>\n<p>BB1010</p>\n");

        btnListarTodos.setText("Listar Todos");
        btnListarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTituloLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(lblBuscarPantente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarPatente, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(btnListarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFiltrarPatente)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblTituloLista)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarPatente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBuscarPantente)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFiltrarPatente)
                    .addComponent(btnVolver)
                    .addComponent(btnListarTodos))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarPatenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarPatenteKeyTyped
        txtBuscarPatente.setBorder(BorderFactory.createBevelBorder(WIDTH, Color.black, Color.black, Color.black, Color.black));
        char letra = evt.getKeyChar();
        if (txtBuscarPatente.getText().length() > 5) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBuscarPatenteKeyTyped

    private void btnFiltrarPatenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarPatenteActionPerformed
        Pattern pat = Pattern.compile("[A-Z]{2}[1-9]{1}[0-9]{3}");
        Pattern pat2 = Pattern.compile("[A-Z]{4}[0-9]{2}");
        Matcher mat = pat.matcher(txtBuscarPatente.getText().toUpperCase());
        Matcher mat2 = pat2.matcher(txtBuscarPatente.getText().toUpperCase());
        if (mat.find() || mat2.find()) {
            if (RegistroEstacionamiento.filtrarPatente(txtBuscarPatente.getText()) == null) {
                JOptionPane.showMessageDialog(this, "Patente no econtrada", "Advertencia", JOptionPane.WARNING_MESSAGE);
                txtBuscarPatente.setBorder(BorderFactory.createBevelBorder(WIDTH, Color.RED, Color.RED, Color.RED, Color.RED));
            } else {
                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setRowCount(0); //limpiar tabla
                Vehiculo vehiculo = RegistroEstacionamiento.filtrarPatente(txtBuscarPatente.getText());
                vehiculo.setHoraSalida(new Date(120, 10, 24, 23, 59, 59));
                Calendar a = getCalendar(vehiculo.getHoraIngreso());
                Calendar b = getCalendar(vehiculo.getHoraSalida());
                int horas = (b.get(Calendar.HOUR_OF_DAY) - a.get(Calendar.HOUR_OF_DAY));
                int minutos = b.get(Calendar.MINUTE) - a.get(Calendar.MINUTE);
                int minutosTotales = horas * 60 + minutos;
                int horasContabilizadas = (int) (minutosTotales / 60); // Se toman en cuenta las exactas que estuvo para el calculo
                minutosTotales = minutosTotales - 10;// se descuentas los primeros 10 min gratis
                String tiempoEstacionado = horasContabilizadas + "h" + " " + minutosTotales;
                modelo.addRow(new Object[]{vehiculo.getPatente(), vehiculo.getMarca(), vehiculo.getModelo(), tiempoEstacionado});
            }
        } else {
            JOptionPane.showMessageDialog(this, "Formato incorrecto o \nVehiculo no encontrado", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtBuscarPatente.setBorder(BorderFactory.createBevelBorder(WIDTH, Color.RED, Color.RED, Color.RED, Color.RED));
        }
    }//GEN-LAST:event_btnFiltrarPatenteActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnListarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarTodosActionPerformed
        List<Vehiculo> listaAutosCamionetas = RegistroEstacionamiento.getListaAutosCamiones();
        List<Camion> listaCamiones=RegistroEstacionamiento.getListaCamiones();
        List<Moto> listaMotos=RegistroEstacionamiento.getListaMotos();
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0); //limpiar tabla
        for (Vehiculo vehiculo : listaAutosCamionetas) {
            vehiculo.setHoraSalida(new Date(120, 10, 24, 23, 59, 59));
            Calendar a = getCalendar(vehiculo.getHoraIngreso());
            Calendar b = getCalendar(vehiculo.getHoraSalida());
            int horas = (b.get(Calendar.HOUR_OF_DAY) - a.get(Calendar.HOUR_OF_DAY));
            int minutos = b.get(Calendar.MINUTE) - a.get(Calendar.MINUTE);
            int minutosTotales = horas * 60 + minutos;
            int horasContabilizadas = (int) (minutosTotales / 60); // Se toman en cuenta las exactas que estuvo para el calculo
            minutosTotales = minutosTotales - 10;// se descuentas los primeros 10 min gratis
            String tiempoEstacionado = horasContabilizadas + "h" + " " + minutosTotales;
            modelo.addRow(new Object[]{vehiculo.getPatente(), vehiculo.getMarca(), vehiculo.getModelo(), tiempoEstacionado});
        }
        for (Moto moto : listaMotos) {
            moto.setHoraSalida(new Date(120, 10, 24, 23, 59, 59));
            Calendar a = getCalendar(moto.getHoraIngreso());
            Calendar b = getCalendar(moto.getHoraSalida());
            int horas = (b.get(Calendar.HOUR_OF_DAY) - a.get(Calendar.HOUR_OF_DAY));
            int minutos = b.get(Calendar.MINUTE) - a.get(Calendar.MINUTE);
            int minutosTotales = horas * 60 + minutos;
            int horasContabilizadas = (int) (minutosTotales / 60); // Se toman en cuenta las exactas que estuvo para el calculo
            minutosTotales = minutosTotales - 10;// se descuentas los primeros 10 min gratis
            String tiempoEstacionado = horasContabilizadas + "h" + " " + minutosTotales;
            modelo.addRow(new Object[]{moto.getPatente(), moto.getMarca(), moto.getModelo(), tiempoEstacionado});
        }
        for (Camion camion : listaCamiones) {
            camion.setHoraSalida(new Date(120, 10, 24, 23, 59, 59));
            Calendar a = getCalendar(camion.getHoraIngreso());
            Calendar b = getCalendar(camion.getHoraSalida());
            int horas = (b.get(Calendar.HOUR_OF_DAY) - a.get(Calendar.HOUR_OF_DAY));
            int minutos = b.get(Calendar.MINUTE) - a.get(Calendar.MINUTE);
            int minutosTotales = horas * 60 + minutos;
            int horasContabilizadas = (int) (minutosTotales / 60); // Se toman en cuenta las exactas que estuvo para el calculo
            minutosTotales = minutosTotales - 10;// se descuentas los primeros 10 min gratis
            String tiempoEstacionado = horasContabilizadas + "h" + " " + minutosTotales;
            modelo.addRow(new Object[]{camion.getPatente(), camion.getMarca(), camion.getModelo(), tiempoEstacionado});
        }
        
    }//GEN-LAST:event_btnListarTodosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltrarPatente;
    private javax.swing.JButton btnListarTodos;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBuscarPantente;
    private javax.swing.JLabel lblTituloLista;
    private javax.swing.JTextField txtBuscarPatente;
    // End of variables declaration//GEN-END:variables
}
